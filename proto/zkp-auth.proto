syntax = "proto3";
package zkp_auth;

/*
 * Prover registers in the sender sending y1 and y2
 */
message RegisterRequest {
    string user = 1;
    bytes y1 = 2;
    bytes y2 = 3;
}

message RegisterResponse {
}

/*
 *  Prover asks for challenge from the server by sending r1 and r2.
 *  Verifier sends the challenge back.
 */
message AuthenticationChallengeRequest {
    string user = 1;
    bytes r1 = 2;
    bytes r2 = 3;
}

message AuthenticationChallengeResponse {
    string auth_id = 1;
    bytes c = 2;
}

/*
 * Prover sends the solution to the challenge.
 * Verifier sends back a session ID if the solution is correct.
 */
message AuthenticationAnswerRequest {
    string auth_id = 1;
    bytes s = 2;
}

message AuthenticationAnswerResponse {
    string session_id = 1;
}

service Auth {
    rpc Register(RegisterRequest) returns (RegisterResponse) {}
    rpc CreateAuthenticationChallenge(AuthenticationChallengeRequest) returns (AuthenticationChallengeResponse) {}
    rpc VerifyAuthentication(AuthenticationAnswerRequest) returns (AuthenticationAnswerResponse) {}
}
